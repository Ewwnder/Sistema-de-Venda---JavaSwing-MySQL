/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemadevendas.view;

import java.util.List;
<<<<<<< HEAD
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemadevendas.controller.ClienteController;
=======

import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemadevendas.controller.ClienteController;
import sistemadevendas.exceptions.ExistenteException;
import sistemadevendas.exceptions.FalhaClienteException;
import sistemadevendas.exceptions.IdNegativoException;
import sistemadevendas.exceptions.NaoEncontradoException;
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
import sistemadevendas.model.Cliente;

/**
 *
 * @author LucasMorais
 */
public class Clientes extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelClientes = new javax.swing.JPanel();
        btnAdicionarCliente = new javax.swing.JButton();
        btnRemoverClientes = new javax.swing.JButton();
        btnBuscarClientePorId = new javax.swing.JButton();
        txtNomeClienteMostrar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnListarCliente = new javax.swing.JButton();
        txtIdClienteBusca = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmailClienteMostrar = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefoneClienteMostrar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIdClienteMostrar = new javax.swing.JTextField();
        btnLimparCampos = new javax.swing.JButton();
        btnEditarClientes = new javax.swing.JButton();
        btnIrTelaPrincipal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        btnAdicionarCliente.setText("Adicionar cliente");
        btnAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarClienteActionPerformed(evt);
            }
        });

        btnRemoverClientes.setText("Remover Cliente");
        btnRemoverClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClientesActionPerformed(evt);
            }
        });

        btnBuscarClientePorId.setText("Buscar Cliente");
        btnBuscarClientePorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClientePorIdActionPerformed(evt);
            }
        });

        txtNomeClienteMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteMostrarActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jLabel3.setText("ID:");

        btnListarCliente.setText("Listar Clientes");
        btnListarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarClienteActionPerformed(evt);
            }
        });

        jLabel4.setText("E-mail:");

        jLabel5.setText("Telefone: ");

        jLabel6.setText("ID:");

        txtIdClienteMostrar.setBackground(new java.awt.Color(204, 204, 204));
        txtIdClienteMostrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIdClienteMostrar.setEnabled(false);

        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        btnEditarClientes.setText("Editar Cliente");
        btnEditarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarClientesActionPerformed(evt);
            }
        });

        btnIrTelaPrincipal.setText("Voltar");
        btnIrTelaPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrTelaPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelClientesLayout = new javax.swing.GroupLayout(painelClientes);
        painelClientes.setLayout(painelClientesLayout);
        painelClientesLayout.setHorizontalGroup(
            painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelClientesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmailClienteMostrar)
                            .addComponent(txtNomeClienteMostrar)
                            .addGroup(painelClientesLayout.createSequentialGroup()
                                .addComponent(txtTelefoneClienteMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(painelClientesLayout.createSequentialGroup()
                                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtIdClienteMostrar, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdClienteBusca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarClientePorId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIrTelaPrincipal))))
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addComponent(btnLimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnListarCliente)
                        .addGap(44, 44, 44)
                        .addComponent(btnAdicionarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverClientes)))
                .addGap(53, 53, 53))
        );
        painelClientesLayout.setVerticalGroup(
            painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClientesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6))
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdClienteBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscarClientePorId)
                        .addComponent(btnIrTelaPrincipal)))
                .addGap(22, 22, 22)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIdClienteMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeClienteMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmailClienteMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefoneClienteMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimparCampos)
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdicionarCliente)
                        .addComponent(btnListarCliente)
                        .addComponent(btnEditarClientes))
                    .addComponent(btnRemoverClientes))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Gerenciamento de Clientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(painelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(painelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
<<<<<<< HEAD

=======
    private static final Pattern TELEFONE_PATTERN = Pattern.compile("^\\([1-9]{2}\\) (?:[2-8]|9[0-9])[0-9]{3}-[0-9]{4}$");
    private static final Pattern EMAIL_PATTERN = Pattern.compile("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$");
    
    private boolean validarDadosTelefone(String telefone){
        return TELEFONE_PATTERN.matcher(telefone).matches();
     }
    
 
    private boolean validarDadosEmail(String email){
       return EMAIL_PATTERN.matcher(email).matches(); 
    }
    
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
    private void btnAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarClienteActionPerformed

        ClienteController clienteController = new ClienteController();

        String nome = txtNomeClienteMostrar.getText();
        String email = txtEmailClienteMostrar.getText();
        String telefone = txtTelefoneClienteMostrar.getText();

        if (nome.isEmpty() || email.isEmpty() || telefone.isEmpty()){
            JOptionPane.showMessageDialog(null, "Preencha todos os campos antes de adicionar!");
            return;
        }
<<<<<<< HEAD

=======
        if(!validarDadosEmail(email)){
            JOptionPane.showMessageDialog(null, "Email em formato inválido, siga o padrão: email@example.com");
            return;
        }
        if(!validarDadosTelefone(telefone)){
            JOptionPane.showMessageDialog(null, "Telefone em formato inválido, siga os padrõs possíveis:"
                    + "Telefones celulares: (99) 99999-9999\n Telefones Fixos: (99) 2999-9999");
            return;
        }
        
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        Cliente novoCliente = new Cliente();

        novoCliente.setNomeCliente(nome);
        novoCliente.setEmail(email);
        novoCliente.setTelefone(telefone);
<<<<<<< HEAD

        clienteController.adicionarCliente(novoCliente);

=======
        
        try{
            clienteController.adicionarCliente(novoCliente);
            JOptionPane.showMessageDialog(null, "Sucesso ao cadastrar cliente");
        } catch(ExistenteException e){
           JOptionPane.showMessageDialog(this, "Erro ao adicionar cliente: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(FalhaClienteException e){
            JOptionPane.showMessageDialog(null, "Erro ao adicionar cliente: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null, "Houve um erro: " + e.getMessage());
        }
        
        
       
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        limparFormularioCliente();
    }//GEN-LAST:event_btnAdicionarClienteActionPerformed

    private void btnRemoverClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClientesActionPerformed
        try{
            String idString = txtIdClienteBusca.getText().trim();

            int id = Integer.parseInt(idString);

            int confirm = JOptionPane.showConfirmDialog(this, "Deseja remover mesmo o cliente?", "SIM", JOptionPane.YES_NO_OPTION);

            if (confirm==JOptionPane.YES_OPTION){
                ClienteController clienteController = new ClienteController();
                clienteController.removerCliente(id);
                JOptionPane.showMessageDialog(this, "Cliente removido com sucesso!");

                limparFormularioCliente();
            }
<<<<<<< HEAD
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Digite um número válido para o ID");
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao remover o cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRemoverClientesActionPerformed

    private void btnBuscarClientePorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClientePorIdActionPerformed
        ClienteController clienteController = new ClienteController();

=======
        } catch (FalhaClienteException e){
            JOptionPane.showMessageDialog(this, "Erro ao remover cliente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (NaoEncontradoException e){
            JOptionPane.showMessageDialog(this, "Erro ao remover cliente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Digite um número válido para o ID", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao remover o cliente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverClientesActionPerformed
    

    private void btnBuscarClientePorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClientePorIdActionPerformed
        ClienteController clienteController = new ClienteController();
        
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        if(txtIdClienteBusca.getText().isEmpty() || txtIdClienteBusca.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O ID NÃO PODE SER NULO OU VAZIO!");
            return;
        }
<<<<<<< HEAD
        int id = Integer.parseInt(txtIdClienteBusca.getText());

        if(id<0){
            JOptionPane.showMessageDialog(null, "O ID NÃO PODE SER NEGATIVO");
            return;
        }

=======
        int id=0;
        try{
            id = Integer.parseInt(txtIdClienteBusca.getText());
        }catch(NumberFormatException e){
             JOptionPane.showMessageDialog(null, "Id digitado não é um numero: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
        
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        try {
            Cliente c = clienteController.buscarClientePorId(id);
            txtIdClienteMostrar.setText(String.valueOf(c.getIdCliente()));
            txtNomeClienteMostrar.setText(c.getNomeCliente());
            txtEmailClienteMostrar.setText(c.getEmail());
            txtTelefoneClienteMostrar.setText(c.getTelefone());

<<<<<<< HEAD
        } catch (Exception e){
            System.out.println("Houve algum erro: " + e.getMessage());
=======
        } catch(IdNegativoException e){
             JOptionPane.showMessageDialog(null, "Houve um erro: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (NaoEncontradoException e){
             JOptionPane.showMessageDialog(null, "Houve um erro: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(FalhaClienteException e){
            JOptionPane.showMessageDialog(null, "Houve um erro: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Houve um erro: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        }

    }//GEN-LAST:event_btnBuscarClientePorIdActionPerformed

    private void txtNomeClienteMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteMostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteMostrarActionPerformed

    private void btnListarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarClienteActionPerformed
        ListagemClientes listaClientesFrame = new ListagemClientes();
        listaClientesFrame.setVisible(true);
        try {
            ClienteController clienteController = new ClienteController();
            List<Cliente> clientes = clienteController.listarClientes();

            DefaultTableModel modelo = (DefaultTableModel) listaClientesFrame.tabelaClientes.getModel(); // Padrão q a internet recomenda, qualquer coisa trocar depois.
            modelo.setRowCount(0);
<<<<<<< HEAD

=======
            
            //pode usar o forEach tbm
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
            for (Cliente c : clientes) {
                modelo.addRow(new Object[]{
                    c.getIdCliente(),
                    c.getNomeCliente(),
                    c.getEmail(),
                    c.getTelefone()
                });
            }

<<<<<<< HEAD
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao listar clientes: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
=======
        } catch (FalhaClienteException e) {
            JOptionPane.showMessageDialog(this, "Erro ao listar clientes: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao listar clientes " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
        }
    }//GEN-LAST:event_btnListarClienteActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparFormularioCliente();
    }//GEN-LAST:event_btnLimparCamposActionPerformed
    
    private void limparFormularioCliente(){
        txtIdClienteMostrar.setText("");
        txtNomeClienteMostrar.setText("");
        txtEmailClienteMostrar.setText("");
        txtTelefoneClienteMostrar.setText("");
    }
    
    private void btnEditarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarClientesActionPerformed
        try{
            if (txtIdClienteBusca.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Selecione o cliente que deseja editar");
                return;
            }

            int id = Integer.parseInt(txtIdClienteBusca.getText());
            String nome = txtNomeClienteMostrar.getText();
            String email = txtEmailClienteMostrar.getText();
            String telefone = txtTelefoneClienteMostrar.getText();

            if (nome.isEmpty() || email.isEmpty() || telefone.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos antes de editar!");
                return;
            }
<<<<<<< HEAD
=======
            
            if(!validarDadosEmail(email)){
                JOptionPane.showMessageDialog(null, "Email em formato inválido, siga o padrão: email@example.com");
                return;
            }
            if(!validarDadosTelefone(telefone)){
                JOptionPane.showMessageDialog(null, "Telefone em formato inválido, siga os padrõs possíveis:"
                        + "Telefones celulares: (99) 99999-9999\n Telefones Fixos: (99) 2999-9999");
                return;
            }
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8

            Cliente novoCliente = new Cliente();
            novoCliente.setIdCliente(id);
            novoCliente.setNomeCliente(nome);
            novoCliente.setEmail(email);
            novoCliente.setTelefone(telefone);

            ClienteController clienteController = new ClienteController();
            clienteController.editarCliente(novoCliente);

            JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso!!!");
            limparFormularioCliente();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "ID inválido!", "Erro", JOptionPane.ERROR_MESSAGE);
<<<<<<< HEAD
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao remover o cliente: " + e.getMessage());
        }
=======
        } catch (ExistenteException e){
           JOptionPane.showMessageDialog(this, "Erro ao editar cliente: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (FalhaClienteException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar cliente: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(NaoEncontradoException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar cliente: " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao editar o cliente: " + e.getMessage());
        }
        
>>>>>>> b040bc436e583440d3963a9af864a8762b323cc8
    }//GEN-LAST:event_btnEditarClientesActionPerformed

    private void btnIrTelaPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrTelaPrincipalActionPerformed
        TelaPrincipal telaPrincipal = new TelaPrincipal();
        
        telaPrincipal.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_btnIrTelaPrincipalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarCliente;
    private javax.swing.JButton btnBuscarClientePorId;
    private javax.swing.JButton btnEditarClientes;
    private javax.swing.JButton btnIrTelaPrincipal;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnListarCliente;
    private javax.swing.JButton btnRemoverClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel painelClientes;
    private javax.swing.JTextField txtEmailClienteMostrar;
    private javax.swing.JTextField txtIdClienteBusca;
    private javax.swing.JTextField txtIdClienteMostrar;
    private javax.swing.JTextField txtNomeClienteMostrar;
    private javax.swing.JTextField txtTelefoneClienteMostrar;
    // End of variables declaration//GEN-END:variables
}
