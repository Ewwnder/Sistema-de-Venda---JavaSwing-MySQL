/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemadevendas.view;

import java.awt.event.ActionEvent;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemadevendas.controller.ProdutoController;
import sistemadevendas.exceptions.ExistenteException;
import sistemadevendas.exceptions.FalhaProdutoException;
import sistemadevendas.exceptions.IdNegativoException;
import sistemadevendas.exceptions.NaoEncontradoException;
import sistemadevendas.model.Produto;

/**
 *
 * @author LucasMorais
 */
public class Produtos extends javax.swing.JFrame {

    /**
     * Creates new form Produtos
     */
    public Produtos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        painelClientes = new javax.swing.JPanel();
        btnAdicionarProduto = new javax.swing.JButton();
        btnRemoverProdutos = new javax.swing.JButton();
        btnBuscarProdutoPorId = new javax.swing.JButton();
        txtNomeProdutoMostrar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnListarProdutos = new javax.swing.JButton();
        txtIdProdutoBusca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDescricaoProdutoMostrar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQuantidadeProdutoMostrar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIdProdutoMostrar = new javax.swing.JTextField();
        btnLimparCampos = new javax.swing.JButton();
        btnEditarProdutos = new javax.swing.JButton();
        txtPrecoVendaProdutoMostrar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnIrTelaPrincipal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("Gerenciamento de Produtos");

        btnAdicionarProduto.setText("Adicionar Produto");
        btnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarProdutoActionPerformed(evt);
            }
        });

        btnRemoverProdutos.setText("Remover Produto");
        btnRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdutosActionPerformed(evt);
            }
        });

        btnBuscarProdutoPorId.setText("Buscar Produto");
        btnBuscarProdutoPorId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdutoPorIdActionPerformed(evt);
            }
        });

        txtNomeProdutoMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeProdutoMostrarActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome:");

        jLabel4.setText("ID:");

        btnListarProdutos.setText("Listar produtos");
        btnListarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarProdutosActionPerformed(evt);
            }
        });

        jLabel5.setText("Descrição:");

        jLabel6.setText("Quantidade:");

        jLabel7.setText("ID:");

        txtIdProdutoMostrar.setBackground(new java.awt.Color(204, 204, 204));
        txtIdProdutoMostrar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIdProdutoMostrar.setEnabled(false);

        btnLimparCampos.setText("Limpar Campos");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        btnEditarProdutos.setText("Editar Produto");
        btnEditarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProdutosActionPerformed(evt);
            }
        });

        jLabel8.setText("Preço Venda:");

        btnIrTelaPrincipal.setText("Voltar");
        btnIrTelaPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrTelaPrincipalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelClientesLayout = new javax.swing.GroupLayout(painelClientes);
        painelClientes.setLayout(painelClientesLayout);
        painelClientesLayout.setHorizontalGroup(
            painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelClientesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescricaoProdutoMostrar)
                            .addComponent(txtNomeProdutoMostrar)
                            .addGroup(painelClientesLayout.createSequentialGroup()
                                .addComponent(txtQuantidadeProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPrecoVendaProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(painelClientesLayout.createSequentialGroup()
                                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtIdProdutoMostrar, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdProdutoBusca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarProdutoPorId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIrTelaPrincipal)))
                        .addGap(53, 53, 53))
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addComponent(btnLimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListarProdutos)
                        .addGap(28, 28, 28)
                        .addComponent(btnAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoverProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        painelClientesLayout.setVerticalGroup(
            painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClientesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelClientesLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(6, 6, 6))
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdProdutoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscarProdutoPorId)
                        .addComponent(btnIrTelaPrincipal)))
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtIdProdutoMostrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDescricaoProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtPrecoVendaProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtQuantidadeProdutoMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimparCampos)
                    .addGroup(painelClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAdicionarProduto)
                        .addComponent(btnListarProdutos)
                        .addComponent(btnEditarProdutos)
                        .addComponent(btnRemoverProdutos)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addComponent(painelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarProdutoActionPerformed

        ProdutoController produtoController = new ProdutoController();
        
        try{
            String nome = txtNomeProdutoMostrar.getText();
            String descricao = txtDescricaoProdutoMostrar.getText();
            int quantidade = Integer.valueOf(txtQuantidadeProdutoMostrar.getText());
            double preco_venda = Double.valueOf(txtPrecoVendaProdutoMostrar.getText());


            if (txtNomeProdutoMostrar.getText().isEmpty() || txtQuantidadeProdutoMostrar.getText().isEmpty() || txtPrecoVendaProdutoMostrar.getText().isEmpty() || txtDescricaoProdutoMostrar.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Preencha todos os campos antes de adicionar!");
                return;
            }

            Produto novoProduto = new Produto();

            novoProduto.setNomeProduto(nome);
            novoProduto.setDescricao(descricao);
            novoProduto.setQuantidade(quantidade);
            novoProduto.setPrecoVenda(preco_venda);

            produtoController.adicionarProduto(novoProduto);
            JOptionPane.showMessageDialog(this, "Produto adicionado com sucesso!!!");
            limparCampos(); 
        } catch(ExistenteException e){
             JOptionPane.showMessageDialog(this, "Erro ao adicionar produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(FalhaProdutoException e){
             JOptionPane.showMessageDialog(this, "Erro ao adicionar produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
           JOptionPane.showMessageDialog(this, "Erro ao adicionar produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);

        }
        
    }//GEN-LAST:event_btnAdicionarProdutoActionPerformed
    
    public void limparCampos(){
       
       txtIdProdutoMostrar.setText("");
       txtIdProdutoBusca.setText("");
       txtNomeProdutoMostrar.setText("");
       txtDescricaoProdutoMostrar.setText("");
       txtQuantidadeProdutoMostrar.setText("");
       txtPrecoVendaProdutoMostrar.setText("");
    
    }
    
    private void btnRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdutosActionPerformed
       
        String idString = txtIdProdutoBusca.getText().trim();
        int id = -1;

            
      
        try{
            id = Integer.parseInt(idString);
            int confirm = JOptionPane.showConfirmDialog(this, "Deseja remover mesmo o produto?", "SIM", JOptionPane.YES_NO_OPTION);

            if (confirm==JOptionPane.YES_OPTION){
                ProdutoController produtoController = new ProdutoController();
                produtoController.removerProduto(id);
                JOptionPane.showMessageDialog(this, "Produto removido com sucesso!");

                limparCampos();
            }
            
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Erro ao remover produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (FalhaProdutoException e){
             JOptionPane.showMessageDialog(this, "Erro ao remover produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (NaoEncontradoException e){
            JOptionPane.showMessageDialog(this, "Erro ao remover produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (IdNegativoException e){
            JOptionPane.showMessageDialog(this, "Erro ao remover produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao remover produto - " + e.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverProdutosActionPerformed

    private void btnBuscarProdutoPorIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdutoPorIdActionPerformed
        ProdutoController produtoController = new ProdutoController();

        if(txtIdProdutoBusca.getText().isEmpty() || txtIdProdutoBusca.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O ID NÃO PODE SER NULO OU VAZIO!");
            return;
        }
       
        try {
            int id = Integer.parseInt(txtIdProdutoBusca.getText());
            Produto p = produtoController.buscarProdutoPorId(id);
            txtIdProdutoMostrar.setText(String.valueOf(p.getIdProduto()));
            txtNomeProdutoMostrar.setText(p.getNomeProduto());
            txtDescricaoProdutoMostrar.setText(p.getDescricao());
            txtQuantidadeProdutoMostrar.setText(String.valueOf(p.getQuantidade()));
            txtPrecoVendaProdutoMostrar.setText(String.valueOf(p.getPrecoVenda()));

        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Erro ao buscar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (FalhaProdutoException e){
            JOptionPane.showMessageDialog(this, "Erro ao buscar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IdNegativoException e){
            JOptionPane.showMessageDialog(this, "Erro ao buscar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (NaoEncontradoException e){
            JOptionPane.showMessageDialog(this, "Erro ao buscar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
           JOptionPane.showMessageDialog(this, "Erro ao buscar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarProdutoPorIdActionPerformed

    private void txtNomeProdutoMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeProdutoMostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeProdutoMostrarActionPerformed

    private void btnListarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarProdutosActionPerformed
        ListagemProdutos listaProdutosFrame = new ListagemProdutos();
        listaProdutosFrame.setVisible(true);
        try {
            ProdutoController produtoController = new ProdutoController();
            List<Produto> produtos = produtoController.listarProdutos();

            DefaultTableModel modelo = (DefaultTableModel) listaProdutosFrame.tabelaProdutos.getModel(); // Padrão q a internet recomenda, qualquer coisa trocar depois.
            modelo.setRowCount(0);
            DecimalFormat df = new DecimalFormat("R$ #,##0.00");
            for (Produto p : produtos) {
                modelo.addRow(new Object[]{
                    p.getIdProduto(),
                    p.getNomeProduto(),
                    p.getDescricao(),
                    df.format(p.getPrecoVenda()),
                    p.getQuantidade()
                });
            }

        } catch(FalhaProdutoException e ){
            JOptionPane.showMessageDialog(this, "Erro ao listar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao listar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnListarProdutosActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void btnEditarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProdutosActionPerformed
        try{
            if (txtIdProdutoBusca.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Selecione o produto que deseja editar");
                return;
            }

            int id = Integer.parseInt(txtIdProdutoBusca.getText());
            String nome = txtNomeProdutoMostrar.getText();
            String descricao = txtDescricaoProdutoMostrar.getText();
            int quantidade = Integer.parseInt(txtQuantidadeProdutoMostrar.getText());
            double preco_venda = Double.parseDouble(txtPrecoVendaProdutoMostrar.getText());
            

            if (nome.isEmpty() || descricao.isEmpty() || txtQuantidadeProdutoMostrar.getText().isEmpty() || txtPrecoVendaProdutoMostrar.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos antes de editar!");
                return;
            }

            Produto novoProduto = new Produto();
            novoProduto.setIdProduto(id);
            novoProduto.setNomeProduto(nome);
            novoProduto.setDescricao(descricao);
            novoProduto.setPrecoVenda(preco_venda);
            novoProduto.setQuantidade(quantidade);

            ProdutoController produtoController = new ProdutoController();
            produtoController.editarProduto(novoProduto);

            JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!!!");
            limparCampos();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Erro ao editar produto: " +e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch(ExistenteException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar produto: " +e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch(FalhaProdutoException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar produto: " +e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch(IdNegativoException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar produto: " +e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (NaoEncontradoException e){
            JOptionPane.showMessageDialog(this, "Erro ao editar produto: " +e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Erro ao editar o produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarProdutosActionPerformed

    private void btnIrTelaPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrTelaPrincipalActionPerformed
        TelaPrincipal telaPrincipal = new TelaPrincipal();

        telaPrincipal.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnIrTelaPrincipalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produtos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Produtos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarProduto;
    private javax.swing.JButton btnBuscarProdutoPorId;
    private javax.swing.JButton btnEditarProdutos;
    private javax.swing.JButton btnIrTelaPrincipal;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnListarProdutos;
    private javax.swing.JButton btnRemoverProdutos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel painelClientes;
    private javax.swing.JTextField txtDescricaoProdutoMostrar;
    private javax.swing.JTextField txtIdProdutoBusca;
    private javax.swing.JTextField txtIdProdutoMostrar;
    private javax.swing.JTextField txtNomeProdutoMostrar;
    private javax.swing.JTextField txtPrecoVendaProdutoMostrar;
    private javax.swing.JTextField txtQuantidadeProdutoMostrar;
    // End of variables declaration//GEN-END:variables
}
